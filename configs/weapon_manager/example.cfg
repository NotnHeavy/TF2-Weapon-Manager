// NOTES:
// - item definition indexes are IDs associated with each individiual weapon and wearable. a list can be found here:
//   https://wiki.alliedmods.net/Team_fortress_2_item_definition_indexes
// - if nosoop's custom weapon x plugin is loaded, this plugin can also be used to manage cwx weapons
// - weapon slots vary for some classes:
//   - spy revolvers are 1
//   - spy sappers are 4
//   - spy melees are 2
//   - spy disguise kit is 5
//   - spy watches are 6
//   - engineer construction pda is 5
//   - engineer destruction pda is 6
//   - everything else is 0 primary, 1 secondary, 2 melee
// - cosmetic code is currently not implemented
// - having weapons in custom slots is VERY experimental and are prone to having bugs, with only a few (of like god knows how many) listed:
//   - builder weapons outside their actual slots currently break completely, this may be fixed in the future
//   - weapons like the flare gun have an incorrect ammo count. in the future i'll work on a secondary plugin to address ammo attributes because the way ammo is implemented internally is too complicated for use with tf2's attributes.
//   - weapons like the thermal thruster and gas passer break with custom slot weapons equipped. i'm not sure how to address this.
// - WARNING! CUSTOM SLOT WEAPONS FOR SPY IN THE SAPPER/PDA SLOTS ARE HIGHLY LIKELY TO CRASH THE SERVER!

//"Loadout"
//{
//    // use item definition index, entity classname or weapon name to directly modify existing weapons/wearables, otherwise use custom tag for other definitions to derive from
//    // NOTE: whitespaces are trimmed
//
//    // Specifying a new entry via item definition index/weapon name will modify the existing definition (if loaded) or automatically create a new one, to be used in the loadout menu.
//    // Specifying a new entry via custom tag will create a new definition but will not affect any existing entries, as it can only be inherited from.
//    "item definition index, weapon name or custom tag"
//    {
//        "#inherits"   "item definition index, weapon name, entity classname or custom tag"    // this will acquire all properties from the definition provided, within this config
//
//        "#classes"    ""                                                                      // specify what classes and their respective slot this weapon is for, structured as so: "class1 x; class2 x y; class3;". 
//                                                                                              // there is currently NO SUPPORT for slots 5/6 (keys 3/4) outside engineer and spy.
//                                                                                              // server owners are also FORBIDDEN from manipulationg the slots of stock weapons in their original classes.
//                                                                                              // if no slots specified for class, default to intended slot if itemdef is valid.
//                                                                                              // if key specified but value left empty, weapon is blocked.
//                                                                                              // if the value is set to "all", every single weapon slot for every single class will be toggled!
//                                                                                              // if cwx weapon, the slot MUST be correct, otherwise undefined behaviour will occur
//                                                                                              
//        "#classname"  ""                                                                      // if a valid classname is provided, the entity spawned will use a completely different entity classname. default used if left empty. (ignored if it is a cwx weapon)
//        "#iscwx"      ""                                                                      // if this is given a value, use this as the cwx uid. if empty, assume native tf2 weapon.
//        "#default"    ""                                                                      // by default, the default weapon for this slot will be a stock weapon. set this to 1 to override it as the default weapon if the currently equipped weapon is blocked
//        "#visible"    ""                                                                      // by default, this definition (if valid) will be visible in the !loadout menu. set to 1 to keep this behaviour; set to 0 to make it invisible.
//        "#medieval"   ""                                                                      // set to 1 if this weapon should be allowed in medieval mode.
//                                                                                              // set to 0 if this weapon should not be allowed in medieval mode.
//                                                                                              // if set to -1 or left blank, use default behaviour.
//    }
//
//    "#loaddefaults"       "1" // if 1, will load definitions for all weapons/wearables as per nosoop's tf_econ_data. if 0, will not load definitions by default
//    "#whitelist"          "0" // if 1, non-stock weapons/wearables will be blocked by default unless they have a loaded definition here
//    "#filterbotkiller"    "1" // if 1, will not load definitions for botkiller weapons by default.
//    "#filterfestive"      "1" // if 1, will not load definitions for festive weapons by default. 
//    "#blockunlisted"      "1" // if 1, will block any weapon from spawning that does not have a listed definition, set to 0 if you want any weapon to be able to be used through tf2 regardless
//    "#createmiscdefs"     "1" // if 1, miscellaneous definitions for weapons besides their original variants (such as festive weapons, botkillers, weapons with different skins, etc) will be created. set this to 0 to not create these definitions.
//                              // to users who are not using this plugin for programmatical purposes, setting this to 0 paired with #blockunlisted to 0 is effectively the same as leaving #blockunlisted to 1 and this to 1.
//                              // note that bot killer and festive weapons will still not count as misc definitions if #filterbotkiller and #fillerfestive respectively are set to 0
//
//    // While #loaddefaults and #whitelist sound similar, you need #loaddefaults to actually load stock weapons by default!
//}

// These are the following player class names you can use:
// Scout - "scout"
// Soldier - "soldier"
// Pyro - "pyro"
// Demoman - "demo", "demoman"
// Heavy - "heavy", "hwg", "heavyweaponsguy"
// Engineer - "engineer", "engi", "engineer"
// Medic - "medic"
// Sniper - "sniper"
// Spy - "spy"

"Loadout"
{
    "#loaddefaults"     "1"
    "#whitelist"        "1"

    "Degreaser"
    {
        "#classes"  "pyro 0; scout 1;"
    }

    "Lolbox Obliterator 8000+: sketchek edition"
    {
        "#classes"  "demo 0;"
        "iscwx"     "{e1bc546e-b0b7-41c5-bc5e-8257406d575c}"
        "default"   "1"
    }
}